spring.application.name=demo

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379

# JWT Configuration
jwt.secret=your_jwt_secret
jwt.expiration=3600000

# Scheduler Cron Job Configuration
scheduler.cron.job=0 * * * * ?

# Stripe API configuration - replace with your Stripe secret key
# apiKey: Your Stripe secret key starting with 'sk_test_' for testing or 'sk_live_' for production
stripe.apiKey=Replace your key

# Twilio configuration - replace with your actual Twilio account details
# account_sid: Your Twilio Account SID, found in your Twilio Console
# auth_token: Your Twilio Auth Token, keep this secret
# phone_number: The Twilio phone number you'll send messages from (in E.164 format)
twilio.account_sid=ACXXXXXXXXXXXXXXXXXXXXXXXXXXXX
twilio.auth_token=your_auth_token
twilio.phone_number=+1234567890

# Logging configuration
# logging.file.name: Path to the logger file where Spring Boot will write application logs.
# You can change this to a different path or filename as needed.
logging.file.name=logs/elkapp.logger

# Resilience4j Retry configuration - customize these settings as needed
# max-attempts: Number of retry attempts before giving up
# wait-duration: Time to wait between retries (supports time units like 's' for seconds, 'ms' for milliseconds)
# retry-exceptions: Comma-separated list of exception class names that trigger a retry
resilience4j.retry.instances.externalApiRetry.max-attempts=3
resilience4j.retry.instances.externalApiRetry.wait-duration=2s
resilience4j.retry.instances.externalApiRetry.retry-exceptions=java.io.IOException, java.net.ConnectException, java.net.SocketTimeoutException, java.lang.RuntimeException
